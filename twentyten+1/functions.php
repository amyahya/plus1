<?php/** add boxes on page to enter fb-app credentials */require ( get_stylesheet_directory().'/meta-box.php');/* need to make this field conditional, i.e only show when fb-page.php used as template *//********************* BEGIN EXTENDING CLASS ***********************//** * Extend RW_Meta_Box class * Add field type: 'fb cred field' */class PlusOne_Meta_Box_FBCred extends RW_Meta_Box {		function add_missed_values() {		parent::add_missed_values();				// add 'multiple' option to taxonomy field with checkbox_list type	  	foreach ($this->_meta_box['fields'] as $key => $field) {			if ('FBCred' == $field['type'] && 'checkbox_list' == $field['options']['type']) {				$this->_meta_box['fields'][$key]['multiple'] = true;			}		}	}		// show taxonomy list	function show_field_taxonomy($field, $meta) {		global $post;				if (!is_array($meta)) $meta = (array) $meta;		$options = $field['options'];		$terms = get_terms($options['taxonomy'], $options['args']);				echo "<th style='width:20%'><label for='{$field['id']}'>{$field['name']}</label></th>			  <td>";		// checkbox_list		if ('checkbox_list' == $options['type']) {			foreach ($terms as $term) {				echo "<input type='checkbox' name='{$field['id']}[]' value='$term->slug'" . checked(in_array($term->slug, $meta), true, false) . " /> $term->name<br/>";			}		}		// select		else {			echo "<select name='{$field['id']}" . ($field['multiple'] ? "[]' multiple='multiple' style='height:auto'" : "'") . ">";					foreach ($terms as $term) {				echo "<option value='$term->slug'" . selected(in_array($term->slug, $meta), true, false) . ">$term->name</option>";			}			echo "</select><br />";		}				echo "{$field['desc']}</td>";	}}/********************* END EXTENDING CLASS ***********************/ /********************* BEGIN DEFINITION OF META BOXES ***********************/// prefix of meta keys, optional// use underscore (_) at the beginning to make keys hidden, for example $prefix = '_rw_';// you also can make prefix empty to disable it$prefix = 'plus1_';$meta_boxes = array();$meta_boxes[] = array(	'id' => 'fb_app',							// meta box id, unique per meta box	'title' => 'Facebook Application Information',			// meta box title	'pages' => array('page'),	// post types, accept custom post types as well, default is array('post'); optional	'context' => 'normal',						// where the meta box appear: normal (default), advanced, side; optional	'priority' => 'high',						// order of meta box: high (default), low; optional	'fields' => array(							// list of meta fields		array(			'name' => 'App Id',					// field name			'desc' => 'something like : 191016167605109',	// field description, optional			'id' => $prefix . 'fb_app_id',				// field id, i.e. the meta key			'type' => 'text',						// text box			'std' => '191016167605109',					// default value, optional			//'validate_func' => 'check_name'			// validate function, created below, inside RW_Meta_Box_Validate class		),				array(			'name' => 'API Key',					// field name			'desc' => 'something like : 5c03e6961b64bfc63e947bc10b9a1d20',	// field description, optional			'id' => $prefix . 'fb_api_key',				// field id, i.e. the meta key			'type' => 'text',						// text box			'std' => '5c03e6961b64bfc63e947bc10b9a1d20',					// default value, optional			//'validate_func' => 'check_name'			// validate function, created below, inside RW_Meta_Box_Validate class		),				array(			'name' => 'App Secret',					// field name			'desc' => 'something like : e7d119a631c2a78e68eb1648b0069a94',	// field description, optional			'id' => $prefix . 'fb_app_secret',				// field id, i.e. the meta key			'type' => 'text',						// text box			'std' => 'e7d119a631c2a78e68eb1648b0069a94',					// default value, optional			//'validate_func' => 'check_name'			// validate function, created below, inside RW_Meta_Box_Validate class		)	));foreach ($meta_boxes as $meta_box) {	$my_box = new PlusOne_Meta_Box_FBCred($meta_box);} /********************* END DEFINITION OF META BOXES ***********************//* fb cred fields end */ ?>