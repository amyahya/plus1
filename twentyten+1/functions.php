<?php/******** Creating custom post type & custom fields - Facebook page ********/  	add_action('init', 'create_fbpage');	function create_fbpage() {    	$fbpage_args = array(        	'label' => __('Fbook Pages'),        	'singular_label' => __('Fbook Page'),        	'public' => true,        	'show_ui' => true,        	'capability_type' => 'post',        	'hierarchical' => false,        	'rewrite' => true,        	'supports' => array('title', 'editor', 'thumbnail'),			'menu_icon' => get_stylesheet_directory_uri() . '/i/icon-fbpage.png'        );    	register_post_type('fbpage',$fbpage_args);	}	/*customizing the post ui, initiating metabox & its styles*/	add_action('admin_init', 'add_fbpage', 1);		/* add callback function to save data entered */	add_action('save_post', 'myfbpage_save_postdata');		//add metaboxes	function add_fbpage(){		add_meta_box('fbpage_details',__( 'Facebook App Details', 'myfbpage_textdomain' ), 'fbpage_details', 'fbpage', 'side');		add_meta_box('fbpage_setting',__( 'Facebook Page Setting', 'myfbpage_textdomain' ), 'fbpage_setting', 'fbpage', 'normal');	}   /*load metabox custom field style on admin area*/	add_action('admin_head', 'mymetabox_style');		function mymetabox_style() {			echo '		<link rel="stylesheet" href="'.get_bloginfo('stylesheet_directory').'/mymetabox.css" type="text/css" media="screen">';		}			/**** creating fbook credentials fields ****/	function fbpage_details(){		global $post;			$myfbapp =  get_post_meta($post->ID,'_myfbapp',TRUE);		// instead of writing HTML here, lets do an include		include(get_stylesheet_directory() . '/mymetabox.php');		// creating nonce for verification		echo '<input type="hidden" name="myfbapp_noncename" value="' . wp_create_nonce(__FILE__) . '" />';	}			/** fbook appearance preferences & skins */	function fbpage_setting(){		global $post;			$myfbapp =  get_post_meta($post->ID,'_myfbapp',TRUE);		// instead of writing HTML here, lets do an include		include(get_stylesheet_directory() . '/mymetabox-2.php');		echo '<input type="hidden" name="myfbapp_noncename" value="' . wp_create_nonce(__FILE__) . '" />';		}			/* When the post is saved, saves our custom data */	function myfbpage_save_postdata( $post_id ) {       	  // verify this came from the our screen and with proper authorization,	  // because save_post can be triggered at other times	  if (!wp_verify_nonce($_POST['myfbapp_noncename'],__FILE__)) return $post_id;	  	  // verify if this is an auto save routine. If it is our form has not been submitted, so we dont want	  // to do anything	  if ( defined('DOING_AUTOSAVE') && DOING_AUTOSAVE ) 		return $post_id;	  // Check permissions	  /* if ( 'page' == $_POST['fbpage'] ) 			{			if ( !current_user_can( 'edit_page', $post_id ) )				return $post_id;			}			else 			{			if (!current_user_can('edit_post', $post_id)) 				return $post_id;			} 		*/	  // OK, we're authenticated: we need to find and save the data	  // var types		// single: _myfbapp[var]		// array: _myfbapp[var][]		// grouped array: _myfbapp[var_group][0][var_1], _myfbapp[var_group][0][var_2]	  		$current_data = get_post_meta($post_id, '_myfbapp', TRUE);		 		$new_data = $_POST['_myfbapp'];	 		my_meta_clean($new_data);	 		if ($current_data) 		{			if (is_null($new_data)) delete_post_meta($post_id,'_myfbapp');			else update_post_meta($post_id,'_myfbapp',$new_data);		}		elseif (!is_null($new_data))		{			add_post_meta($post_id,'_myfbapp',$new_data,TRUE);		}	 		return $post_id;	  	}						function my_meta_clean(&$arr)	{		if (is_array($arr))		{			foreach ($arr as $i => $v)			{				if (is_array($arr[$i])) 				{					my_meta_clean($arr[$i]);	 					if (!count($arr[$i])) 					{						unset($arr[$i]);					}				}				else 				{					if (trim($arr[$i]) == '') 					{						unset($arr[$i]);					}				}			}	 			if (!count($arr)) 			{				$arr = NULL;			}		}	}				/*grab current css*/	/*	function my_custom_skin() {			global $post;			$css_key = $myfbapp['skin'];				if (!empty($css_key) && is_singular( 'fbpage' )) {					echo '<link rel="stylesheet" href="' . get_bloginfo('stylesheet_directory') . '/skin/' .$css_key.'css" type="text/css" media="screen" />';				} else {						echo '<link rel="stylesheet" href="' . get_bloginfo('stylesheet_directory') . '/skin/fbstyle-00.css" type="text/css" media="screen" /><!--default-->';					}			}	*//******** fan gating shortcodes ********/		function fbliked($atts, $content = null){		global $like_status;		if ($like_status == TRUE ){		return '<div class="liked">'.$content.'</div>';		}		}		add_shortcode('liked', 'fbliked');	function fbunliked($atts, $content = null){	  global $like_status;		if ( $like_status == FALSE ){		return '<div class="unliked">'.$content.'</div>';		}		}		add_shortcode('unliked', 'fbunliked');?>